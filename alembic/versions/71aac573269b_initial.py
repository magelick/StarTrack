"""initial

Revision ID: 71aac573269b
Revises: ""
Create Date: 2024-09-05 11:12:17.128252

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = "71aac573269b"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "child",
        sa.Column("first_name", sa.VARCHAR(length=128), nullable=False),
        sa.Column("last_name", sa.VARCHAR(length=128), nullable=False),
        sa.Column("date_of_birth", sa.DATE(), nullable=False),
        sa.Column("age", sa.INTEGER(), nullable=False),
        sa.Column(
            "gender",
            sa.Enum("MALE", "FEMALE", name="child_gender_enum"),
            nullable=False,
        ),
        sa.Column("photo_url", sa.VARCHAR(length=256), nullable=True),
        sa.Column("illness_history", sa.VARCHAR(length=256), nullable=True),
        sa.Column("medical_diagnoses", sa.VARCHAR(length=256), nullable=True),
        sa.Column("id", sa.SMALLINT(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("first_name", sa.VARCHAR(length=128), nullable=True),
        sa.Column("last_name", sa.VARCHAR(length=128), nullable=True),
        sa.Column("email", sa.VARCHAR(length=128), nullable=False),
        sa.Column("password", sa.VARCHAR(length=128), nullable=False),
        sa.Column(
            "role",
            sa.Enum("PARENT", "COACH", name="user_role_enum"),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), nullable=True),
        sa.Column(
            "sport_type",
            sa.Enum(
                "SOCCER",
                "BASKETBALL",
                "HOCKEY",
                "VOLLEYBALL",
                "TENNIS",
                "SWIMMING",
                "ATHLETICS",
                "BOXING",
                "GYMNASTICS",
                "FENCING",
                "FIGURE_SKATING",
                "OTHER",
                name="usersporttypeenum",
            ),
            nullable=True,
        ),
        sa.Column("is_active", sa.BOOLEAN(), nullable=False),
        sa.Column("terms_accepted", sa.BOOLEAN(), nullable=False),
        sa.Column("id", sa.SMALLINT(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "child_academic_data",
        sa.Column("date", sa.DATE(), nullable=False),
        sa.Column("academic_performance", sa.FLOAT(), nullable=True),
        sa.Column(
            "academic_achievements", sa.VARCHAR(length=256), nullable=True
        ),
        sa.Column("work_time", sa.INTEGER(), nullable=True),
        sa.Column(
            "attitude_towards_study",
            sa.Enum(
                "GOOD",
                "NOT_BAD",
                "NOT_GOOD",
                "BAD",
                name="child_toward_study_enum",
            ),
            nullable=True,
        ),
        sa.Column(
            "areas_of_difficulty", sa.VARCHAR(length=256), nullable=True
        ),
        sa.Column("additional_support_needs", sa.BOOLEAN(), nullable=True),
        sa.Column("subject_interest", sa.VARCHAR(length=256), nullable=True),
        sa.Column("child_id", sa.SMALLINT(), nullable=False),
        sa.Column("id", sa.SMALLINT(), nullable=False),
        sa.ForeignKeyConstraint(
            ["child_id"], ["child.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "child_data",
        sa.Column("date", sa.DATE(), nullable=False),
        sa.Column("feedback", sa.TEXT(), nullable=True),
        sa.Column(
            "pulse_recovery_status", sa.VARCHAR(length=128), nullable=True
        ),
        sa.Column("start_adolescence_age", sa.FLOAT(), nullable=False),
        sa.Column("peek_adolescence_age", sa.FLOAT(), nullable=False),
        sa.Column("end_adolescence_age", sa.FLOAT(), nullable=False),
        sa.Column("entry_type", sa.VARCHAR(length=128), nullable=False),
        sa.Column("child_id", sa.SMALLINT(), nullable=False),
        sa.Column("id", sa.SMALLINT(), nullable=False),
        sa.ForeignKeyConstraint(
            ["child_id"], ["child.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "child_development_data",
        sa.Column("date", sa.DATE(), nullable=False),
        sa.Column(
            "peer_interactions",
            sa.Enum(
                "GOOD",
                "NOT_BAD",
                "NOT_GOOD",
                "BAD",
                name="child_development_enum",
            ),
            nullable=True,
        ),
        sa.Column(
            "communication_skills",
            sa.Enum(
                "BOOLING",
                "GOOD",
                "NOT_BAD",
                "NOT_GOOD",
                "BAD",
                name="child_communication_enum",
            ),
            nullable=True,
        ),
        sa.Column(
            "attention_level",
            sa.Enum(
                "GOOD",
                "NOT_BAD",
                "NOT_GOOD",
                "BAD",
                name="child_development_enum",
            ),
            nullable=True,
        ),
        sa.Column(
            "memory_level",
            sa.Enum(
                "GOOD",
                "NOT_BAD",
                "NOT_GOOD",
                "BAD",
                name="child_development_enum",
            ),
            nullable=True,
        ),
        sa.Column(
            "problem_solving_skills",
            sa.Enum(
                "GOOD",
                "NOT_BAD",
                "NOT_GOOD",
                "BAD",
                name="child_development_enum",
            ),
            nullable=True,
        ),
        sa.Column(
            "cognitive_tests",
            sa.Enum(
                "GOOD",
                "NOT_BAD",
                "NOT_GOOD",
                "BAD",
                name="child_development_enum",
            ),
            nullable=True,
        ),
        sa.Column(
            "emotional_tests",
            sa.Enum(
                "GOOD",
                "NOT_BAD",
                "NOT_GOOD",
                "BAD",
                name="child_development_enum",
            ),
            nullable=True,
        ),
        sa.Column("child_id", sa.SMALLINT(), nullable=False),
        sa.Column("id", sa.SMALLINT(), nullable=False),
        sa.ForeignKeyConstraint(
            ["child_id"], ["child.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "child_family_data",
        sa.Column("date", sa.DATE(), nullable=False),
        sa.Column("family_info", sa.VARCHAR(length=256), nullable=True),
        sa.Column("family_involvement", sa.VARCHAR(length=128), nullable=True),
        sa.Column(
            "parenting_methods",
            sa.Enum(name="child_parenting_methods_enum"),
            nullable=True,
        ),
        sa.Column(
            "parental_attention_and_care",
            sa.Enum(
                "GOOD",
                "NOT_BAD",
                "NOT_GOOD",
                "BAD",
                name="child_parental_attention_enum",
            ),
            nullable=True,
        ),
        sa.Column("child_id", sa.SMALLINT(), nullable=False),
        sa.Column("id", sa.SMALLINT(), nullable=False),
        sa.ForeignKeyConstraint(
            ["child_id"], ["child.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "child_health_data",
        sa.Column("date", sa.DATE(), nullable=False),
        sa.Column("current_symptoms", sa.VARCHAR(length=256), nullable=True),
        sa.Column(
            "frequency_of_illnesses", sa.VARCHAR(length=256), nullable=True
        ),
        sa.Column("doctor_visits", sa.INTEGER(), nullable=True),
        sa.Column(
            "stress_anxiety_depression", sa.VARCHAR(length=256), nullable=True
        ),
        sa.Column(
            "emotional_state",
            sa.Enum(
                "HAPPY",
                "NOT_BAD",
                "NOT_GOOD",
                "BAD",
                name="child_emotional_state_enum",
            ),
            nullable=True,
        ),
        sa.Column("child_id", sa.SMALLINT(), nullable=False),
        sa.Column("id", sa.SMALLINT(), nullable=False),
        sa.ForeignKeyConstraint(
            ["child_id"], ["child.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "child_medical_data",
        sa.Column("date", sa.DATE(), nullable=False),
        sa.Column("vaccinations", sa.VARCHAR(length=256), nullable=True),
        sa.Column("medications", sa.VARCHAR(length=256), nullable=True),
        sa.Column("procedures", sa.VARCHAR(length=256), nullable=True),
        sa.Column("height", sa.FLOAT(), nullable=False),
        sa.Column("weight", sa.FLOAT(), nullable=False),
        sa.Column("blood_tests", sa.INTEGER(), nullable=True),
        sa.Column("urine_tests", sa.INTEGER(), nullable=True),
        sa.Column(
            "blood_type",
            sa.Enum(
                "A_POSITIVE",
                "A_NEGATIVE",
                "B_POSITIVE",
                "B_NEGATIVE",
                "AB_POSITIVE",
                "AB_NEGATIVE",
                "O_POSITIVE",
                "O_NEGATIVE",
                name="child_blood_type_enum",
            ),
            nullable=True,
        ),
        sa.Column("child_id", sa.SMALLINT(), nullable=False),
        sa.Column("id", sa.SMALLINT(), nullable=False),
        sa.ForeignKeyConstraint(
            ["child_id"], ["child.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "child_nutrition_data",
        sa.Column("date", sa.DATE(), nullable=False),
        sa.Column("dietary_info", sa.VARCHAR(length=256), nullable=True),
        sa.Column("snacking_habits", sa.BOOLEAN(), nullable=True),
        sa.Column("beverage_consumption", sa.BOOLEAN(), nullable=True),
        sa.Column(
            "supplements_or_vitamins", sa.VARCHAR(length=256), nullable=True
        ),
        sa.Column("reactions_to_food", sa.VARCHAR(length=256), nullable=True),
        sa.Column(
            "allergies_or_intolerances", sa.VARCHAR(length=256), nullable=True
        ),
        sa.Column("child_id", sa.SMALLINT(), nullable=False),
        sa.Column("id", sa.SMALLINT(), nullable=False),
        sa.ForeignKeyConstraint(
            ["child_id"], ["child.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "child_physical_data",
        sa.Column("date", sa.DATE(), nullable=False),
        sa.Column("physical_type", sa.VARCHAR(length=256), nullable=True),
        sa.Column("daily_activity_level", sa.INTEGER(), nullable=True),
        sa.Column("flexibility", sa.VARCHAR(length=128), nullable=True),
        sa.Column("coordination", sa.VARCHAR(length=128), nullable=True),
        sa.Column(
            "injuries_and_chronic_pains", sa.VARCHAR(length=256), nullable=True
        ),
        sa.Column(
            "sports_achievements", sa.VARCHAR(length=256), nullable=True
        ),
        sa.Column("interests", sa.VARCHAR(length=256), nullable=True),
        sa.Column("child_id", sa.SMALLINT(), nullable=False),
        sa.Column("id", sa.SMALLINT(), nullable=False),
        sa.ForeignKeyConstraint(
            ["child_id"], ["child.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_child",
        sa.Column("user_id", sa.SMALLINT(), nullable=False),
        sa.Column("child_id", sa.SMALLINT(), nullable=False),
        sa.Column("id", sa.SMALLINT(), nullable=False),
        sa.ForeignKeyConstraint(
            ["child_id"], ["child.id"], ondelete="NO ACTION"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], ondelete="NO ACTION"
        ),
        sa.PrimaryKeyConstraint("user_id", "child_id", "id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_child")
    op.drop_table("child_physical_data")
    op.drop_table("child_nutrition_data")
    op.drop_table("child_medical_data")
    op.drop_table("child_health_data")
    op.drop_table("child_family_data")
    op.drop_table("child_development_data")
    op.drop_table("child_data")
    op.drop_table("child_academic_data")
    op.drop_table("user")
    op.drop_table("child")
    # ### end Alembic commands ###
